{
  "name": "Ingestion TechnicIA (Corrigée)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "upload",
        "options": {
          "responseBinaryPropertyName": "file"
        }
      },
      "id": "f9bda9f2-b21a-4c0e-8522-a44cedf45f55",
      "name": "Webhook PDF",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        540,
        240
      ],
      "webhookId": "95faf52a-4ffe-4b14-95df-a5f2430caa1c"
    },
    {
      "parameters": {
        "destinationPath": "={{ \"/tmp/technicia-docs/\" + $json.name.replace(/[^a-zA-Z0-9-_\\.]/g, \"_\") }}",
        "fileName": "={{ $json.name.replace(/[^a-zA-Z0-9-_\\.]/g, \"_\") }}",
        "options": {}
      },
      "id": "7e1b8339-dc16-4b42-a20b-d1c7c1e5b46d",
      "name": "Écrire le fichier",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        760,
        240
      ]
    },
    {
      "parameters": {
        "functionCode": "// Prépare les données pour le document processor\nconst filePath = items[0].json.path;\nconst documentId = Math.random().toString(36).substring(2, 15);\nconst fileName = items[0].json.name || \"document.pdf\";\n\nreturn [\n  {\n    json: {\n      documentId,\n      filePath,\n      fileName,\n      mimeType: \"application/pdf\",\n      extractImages: true,\n      extractText: true\n    }\n  }\n];"
      },
      "id": "8ad6e3af-7cee-4a69-86a0-3a38f6e6e764",
      "name": "Préparer traitement",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        980,
        240
      ]
    },
    {
      "parameters": {
        "url": "=http://document-processor:8001/process",
        "method": "POST",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "binaryData",
              "inputDataFieldNameSpecialChars": "={{ $binary.file }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d0e0ae7a-be9b-40e9-9c66-2ae5dab1e8c9",
      "name": "Document Processor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1180,
        240
      ]
    },
    {
      "parameters": {
        "functionCode": "// Traite la réponse du document processor\nconst result = items[0].json;\n\n// Prépare les données pour le traitement des images\nconst images = result.images || [];\nconst documentId = result.documentId;\nconst fileName = result.fileName;\nconst textBlocks = result.textBlocks || [];\n\n// Retourne un item pour chaque image à traiter\nif (images.length > 0) {\n  return images.map(image => ({\n    json: {\n      documentId,\n      fileName,\n      imageId: image.id,\n      imagePath: image.path,\n      page: image.page,\n      processingStatus: \"pending\",\n      textBlocks\n    }\n  }));\n} else {\n  // S'il n'y a pas d'images, retourner un item vide pour continuer le workflow\n  return [{\n    json: {\n      documentId,\n      fileName,\n      noImages: true,\n      processingStatus: \"completed\",\n      textBlocks\n    }\n  }];\n}"
      },
      "id": "a923c5e9-be0e-4f16-9aad-16e4ee28ed93",
      "name": "Extraire images",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1400,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.noImages }}",
              "operation": "exists"
            }
          ]
        }
      },
      "id": "67fc29ee-a14e-4d35-a903-f5eadcfaa64e",
      "name": "Vérifier images",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1620,
        240
      ]
    },
    {
      "parameters": {
        "url": "=http://schema-analyzer:8002/analyze",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"documentId\": \"{{ $json.documentId }}\",\n  \"imageId\": \"{{ $json.imageId }}\",\n  \"imagePath\": \"{{ $json.imagePath }}\"\n}",
        "options": {}
      },
      "id": "2a44f2a3-2037-4dc2-a60d-c44f3fe25ee3",
      "name": "Analyser schéma",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1820,
        160
      ]
    },
    {
      "parameters": {
        "url": "=http://vector-engine:8003/vectorize/document",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"documentId\": \"{{ $('Préparer traitement').item.json.documentId }}\",\n  \"fileName\": \"{{ $('Préparer traitement').item.json.fileName }}\",\n  \"filePath\": \"{{ $('Préparer traitement').item.json.filePath }}\",\n  \"textBlocks\": {{ JSON.stringify($json.textBlocks || []) }}\n}",
        "options": {}
      },
      "id": "85b2d293-9334-400d-a600-3f1d9ca3aa3d",
      "name": "Vectoriser document",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        2100,
        360
      ]
    },
    {
      "parameters": {
        "content": "## Workflow d'ingestion TechnicIA (Corrigé)\nCe workflow permet l'ingestion des documents techniques dans TechnicIA:\n1. Réception du document via webhook\n2. Écriture du fichier sur le système\n3. Traitement par Document Processor pour extraire texte et images\n4. Analyse des schémas avec Schema Analyzer pour classification\n5. Vectorisation du contenu avec Vector Engine pour indexation\n6. Notification de complétion",
        "height": 256.80801162354124,
        "width": 457.8548927287922
      },
      "id": "2d9bdb6b-1f8a-4a78-b0a4-d3eab74bfc30",
      "name": "Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        100
      ]
    },
    {
      "parameters": {
        "url": "=http://vector-engine:8003/vectorize/image",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"documentId\": \"{{ $json.documentId }}\",\n  \"imageId\": \"{{ $json.imageId }}\",\n  \"imagePath\": \"{{ $json.imagePath }}\",\n  \"classification\": {{ JSON.stringify($json.classification || {}) }}\n}",
        "options": {}
      },
      "id": "77cc80e6-5f30-4d89-a651-03ec72da93bc",
      "name": "Vectoriser image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        2100,
        160
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "79b3d608-d44a-4c25-bd7f-9a7aafaf6b53",
      "name": "Merge images",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2340,
        220
      ]
    },
    {
      "parameters": {
        "functionCode": "// Fonction pour agréger les résultats et préparer la réponse finale\nconst results = items.map(item => item.json);\nconst documentId = results[0]?.documentId || \"unknown\";\nconst fileName = results[0]?.fileName || \"unknown\";\n\nreturn [{\n  json: {\n    documentId,\n    fileName,\n    status: \"success\",\n    totalImages: results.filter(r => r.imageId).length,\n    processingTime: new Date().toISOString(),\n    message: `Document ${fileName} traité et indexé avec succès`\n  }\n}];"
      },
      "id": "a8c7a9c9-20ee-4e65-b991-fa2d7ce2aee5",
      "name": "Préparer réponse",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2340,
        400
      ]
    },
    {
      "parameters": {
        "content": "=## Document traité avec succès\n\n**Détails du document:**\n- **Nom:** {{ $json.fileName }}\n- **ID:** {{ $json.documentId }}\n- **Images traitées:** {{ $json.totalImages || 0 }}\n- **Statut:** {{ $json.status || 'Terminé' }}\n\nLe document a été indexé avec succès dans la base de connaissances TechnicIA. Vous pouvez maintenant poser des questions sur son contenu.",
        "options": {}
      },
      "id": "0f2a7d3b-7c2c-4cc8-add7-9c4bfd2c5baa",
      "name": "Notification de succès",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2580,
        220
      ]
    }
  ],
  "connections": {
    "Webhook PDF": {
      "main": [
        [
          {
            "node": "Écrire le fichier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Écrire le fichier": {
      "main": [
        [
          {
            "node": "Préparer traitement",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Préparer traitement": {
      "main": [
        [
          {
            "node": "Document Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Document Processor": {
      "main": [
        [
          {
            "node": "Extraire images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extraire images": {
      "main": [
        [
          {
            "node": "Vérifier images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vérifier images": {
      "main": [
        [
          {
            "node": "Analyser schéma",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Vectoriser document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyser schéma": {
      "main": [
        [
          {
            "node": "Vectoriser image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vectoriser image": {
      "main": [
        [
          {
            "node": "Merge images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vectoriser document": {
      "main": [
        [
          {
            "node": "Préparer réponse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge images": {
      "main": [
        [
          {
            "node": "Préparer réponse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Préparer réponse": {
      "main": [
        [
          {
            "node": "Notification de succès",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "1",
      "name": "TechnicIA",
      "color": "#50e3c2"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-04-01T00:00:00.000Z",
  "versionId": "9d3a71ab-6db5-4b2d-925a-4ac92a8c35e7"
}