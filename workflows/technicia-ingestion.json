{
  "name": "TechnicIA Document Ingestion",
  "nodes": [
    {
      "parameters": {
        "path": "upload",
        "responseMode": "responseNode",
        "options": {
          "binaryData": true,
          "bodyContentType": "multipart/form-data"
        },
        "httpMethod": "POST"
      },
      "name": "Document Upload Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "upload"
    },
    {
      "parameters": {
        "jsCode": "// Version ultra-simplifiée sans validation\n// Convertit simplement l'input en un objet de réponse compatible avec le frontend\n\n// Log complet de l'entrée pour débogage\nconsole.log('Structure complète de l\\'entrée:', JSON.stringify($input, null, 2));\n\n// Déterminer si des données binaires sont présentes\nlet hasBinaryData = false;\nlet fileName = 'document.pdf';\nlet fileSize = 0;\n\nif ($input.item && $input.item.binary) {\n  const binaryProperties = Object.keys($input.item.binary);\n  if (binaryProperties.length > 0) {\n    hasBinaryData = true;\n    const firstProperty = binaryProperties[0];\n    console.log('Propriété binaire trouvée:', firstProperty);\n    \n    const fileData = $input.item.binary[firstProperty];\n    if (fileData) {\n      fileName = fileData.fileName || fileName;\n      fileSize = fileData.fileSize || fileSize;\n      console.log('Fichier trouvé:', fileName, '(', fileSize, 'octets )');\n    }\n  }\n}\n\n// Créer une réponse simulée qui correspond exactement à ce que le frontend attend\nconst result = {\n  success: true,\n  document_id: 'doc-' + Date.now(),\n  document_name: fileName,\n  text_chunks_count: 12,\n  images_count: 5,\n  processing_type: 'simulated'\n};\n\n// Log final\nconsole.log('Réponse finale:', JSON.stringify(result, null, 2));\n\nreturn result;"
      },
      "name": "Generate Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        420,
        300
      ]
    },
    {
      "parameters": {
        "content": "={{ JSON.stringify($json) }}",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Return Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        600,
        300
      ]
    }
  ],
  "connections": {
    "Document Upload Webhook": {
      "main": [
        [
          {
            "node": "Generate Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Response": {
      "main": [
        [
          {
            "node": "Return Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}